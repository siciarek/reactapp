import {takeEvery, takeLatest, put, all} from 'redux-saga/effects'

import {
  APP_START_PROCESSING,
  APP_END_PROCESSING,
  APP_ERROR_OCCURRED,
  APP_ERROR_HIDE,
  APP_NOTIFICATION_OCCURRED,
} from './AppActionTypes'

import {
  GENRE_LIST_FETCH,
  GENRE_LIST_FETCH_FULLFILLED,
  GENRE_LIST_FETCH_REJECTED,
  GENRE_ITEM_FETCH,
  GENRE_ITEM_FETCH_FULLFILLED,
  GENRE_ITEM_FETCH_REJECTED,
  GENRE_ITEM_ADD,
  GENRE_ITEM_ADD_FULLFILLED,
  GENRE_ITEM_ADD_REJECTED,
  GENRE_ITEM_SAVE,
  GENRE_ITEM_SAVE_FULLFILLED,
  GENRE_ITEM_SAVE_REJECTED,
  GENRE_ITEM_UPDATE_FULLFILLED,
  GENRE_ITEM_UPDATE_REJECTED,
  GENRE_ITEM_REMOVE,
  GENRE_ITEM_REMOVE_FULLFILLED,
  GENRE_ITEM_REMOVE_REJECTED,
} from '../genre/Genre'

import {
  SONG_ITEM_SAVE,
  SONG_ITEM_REMOVE,
  SONG_ITEM_FETCH,
  SONG_ITEM_SAVE_FULLFILLED,
  SONG_ITEM_SAVE_REJECTED,
  SONG_ITEM_FETCH_FULLFILLED,
  SONG_ITEM_FETCH_REJECTED,
  SONG_ITEM_REMOVE_FULLFILLED,
  SONG_ITEM_REMOVE_REJECTED,
} from '../song/Song'

import {
  LYRICS_LIST_FETCH,
  LYRICS_LIST_FETCH_FULLFILLED,
  LYRICS_LIST_FETCH_REJECTED,
  LYRICS_ITEM_FETCH,
  LYRICS_ITEM_FETCH_FULLFILLED,
  LYRICS_ITEM_FETCH_REJECTED,
} from '../lyrics/Lyrics'

import {
  AUTHOR_LIST_FETCH,
  AUTHOR_LIST_FETCH_FULLFILLED,
  AUTHOR_LIST_FETCH_REJECTED,
  AUTHOR_ITEM_FETCH,
  AUTHOR_ITEM_FETCH_FULLFILLED,
  AUTHOR_ITEM_FETCH_REJECTED,
} from '../author/Author'

import {
  ARTIST_LIST_FETCH,
  ARTIST_LIST_FETCH_FULLFILLED,
  ARTIST_LIST_FETCH_REJECTED,
  ARTIST_ITEM_FETCH,
  ARTIST_ITEM_FETCH_FULLFILLED,
  ARTIST_ITEM_FETCH_REJECTED,
} from '../artist/Artist'

import {
  USER_PROFILE_FETCH,
  USER_PROFILE_FETCH_FULLFILLED,
  USER_PROFILE_FETCH_REJECTED,
  USER_DASHBOARD_FETCH,
  USER_DASHBOARD_FETCH_FULLFILLED,
  USER_DASHBOARD_FETCH_REJECTED,
  USER_AUTH,
  USER_AUTH_FULLFILLED,
  USER_AUTH_REJECTED,
  USER_UNAUTH,
  USER_UNAUTH_FULLFILLED,
  USER_UNAUTH_REJECTED,
  USER_AUTH_CHECK,
  USER_AUTH_CHECK_SUCCESS,
  USER_AUTH_CHECK_FAILURE,
  USER_SAVE,
  USER_SAVE_FULLFILLED,
  USER_SAVE_REJECTED,
} from '../user/User'

export function* runTheSpinner() {
  yield put({type: APP_START_PROCESSING})
}

export function* stopTheSpinner() {
  yield put({type: APP_END_PROCESSING})
}

export function* showError(action) {
  yield put({type: APP_ERROR_OCCURRED, payload: action.payload.response})
}

export function* showNotification(action) {
  yield put({type: APP_NOTIFICATION_OCCURRED, payload: 'Operation succeed.'})
}

export function* hideError() {
  yield put({type: APP_ERROR_HIDE})
}

export function* watchErrors() {

  yield takeEvery([
    USER_DASHBOARD_FETCH_REJECTED,
    USER_PROFILE_FETCH_REJECTED,
    GENRE_ITEM_ADD_REJECTED,
    GENRE_ITEM_SAVE_REJECTED,
    GENRE_ITEM_REMOVE_REJECTED,
    AUTHOR_LIST_FETCH_REJECTED,
  ], showError)

  yield takeEvery([
    USER_AUTH_FULLFILLED,
  ], hideError)
}

export function* watchNotifications() {

  yield takeLatest([
    GENRE_ITEM_ADD_FULLFILLED,
    GENRE_ITEM_SAVE_FULLFILLED,
  ], showNotification)
}

export function* watchTheSpinner() {
  yield takeEvery([
    USER_PROFILE_FETCH,
    USER_DASHBOARD_FETCH,
    SONG_ITEM_SAVE,
    SONG_ITEM_FETCH,
    SONG_ITEM_REMOVE,
    GENRE_ITEM_REMOVE,
    GENRE_ITEM_SAVE,
    GENRE_ITEM_ADD,
    GENRE_ITEM_FETCH,
    GENRE_LIST_FETCH,
    USER_AUTH,
    USER_UNAUTH,
    USER_AUTH_CHECK,
    USER_SAVE,
    LYRICS_LIST_FETCH,
    LYRICS_ITEM_FETCH,
    AUTHOR_LIST_FETCH,
    AUTHOR_ITEM_FETCH,
    ARTIST_LIST_FETCH,
    ARTIST_ITEM_FETCH,
  ], runTheSpinner)

  yield takeEvery([
    USER_DASHBOARD_FETCH_FULLFILLED,
    USER_DASHBOARD_FETCH_REJECTED,
    USER_PROFILE_FETCH_FULLFILLED,
    USER_PROFILE_FETCH_REJECTED,
    SONG_ITEM_SAVE_FULLFILLED,
    SONG_ITEM_SAVE_REJECTED,
    SONG_ITEM_FETCH_FULLFILLED,
    SONG_ITEM_FETCH_REJECTED,
    SONG_ITEM_REMOVE_FULLFILLED,
    SONG_ITEM_REMOVE_REJECTED,
    GENRE_LIST_FETCH_FULLFILLED,
    GENRE_LIST_FETCH_REJECTED,
    GENRE_ITEM_FETCH_FULLFILLED,
    GENRE_ITEM_FETCH_REJECTED,
    GENRE_ITEM_ADD_FULLFILLED,
    GENRE_ITEM_ADD_REJECTED,
    GENRE_ITEM_SAVE_FULLFILLED,
    GENRE_ITEM_SAVE_REJECTED,
    GENRE_ITEM_UPDATE_FULLFILLED,
    GENRE_ITEM_UPDATE_REJECTED,
    GENRE_ITEM_REMOVE_FULLFILLED,
    GENRE_ITEM_REMOVE_REJECTED,
    USER_SAVE_FULLFILLED,
    USER_SAVE_REJECTED,
    USER_AUTH_CHECK_SUCCESS,
    USER_AUTH_CHECK_FAILURE,
    USER_AUTH_FULLFILLED,
    USER_AUTH_REJECTED,
    USER_UNAUTH_FULLFILLED,
    USER_UNAUTH_REJECTED,
    LYRICS_LIST_FETCH_FULLFILLED,
    LYRICS_LIST_FETCH_REJECTED,
    LYRICS_ITEM_FETCH_FULLFILLED,
    LYRICS_ITEM_FETCH_REJECTED,
    AUTHOR_LIST_FETCH_FULLFILLED,
    AUTHOR_LIST_FETCH_REJECTED,
    AUTHOR_ITEM_FETCH_FULLFILLED,
    AUTHOR_ITEM_FETCH_REJECTED,
    ARTIST_LIST_FETCH_FULLFILLED,
    ARTIST_LIST_FETCH_REJECTED,
    ARTIST_ITEM_FETCH_FULLFILLED,
    ARTIST_ITEM_FETCH_REJECTED,
  ], stopTheSpinner)
}

export default function* rootSaga() {
  yield all([
    watchNotifications(),
    watchTheSpinner(),
    watchErrors(),
  ])
}